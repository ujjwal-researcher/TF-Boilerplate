syntax = "proto2";

// Proto file for Learning rate schedules as per tf.keras.schedules API.


message LearningRateSchedule{
  oneof schedule {
    CosineDecaySchedule cosine_decay_schedule = 1;
    CosineDecayRestartsSchedule cosine_decay_restarts_schedule = 2;
    ExponentialDecaySchedule exponential_decay_schedule = 3;
    InverseTimeDecaySchedule inverse_time_decay_schedule = 4;
    PiecewiseConstantDecaySchedule piecewise_constant_decay_schedule = 5;
    PolynomialDecaySchedule polynomial_decay_schedule = 6;
    double constant_learning_rate=7;
  }
}

message CosineDecaySchedule{
  // https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/schedules/CosineDecay
  required double initial_learning_rate = 1;
  required int64 decay_steps = 2;
  optional double alpha = 3[default = 0.0];
}

message CosineDecayRestartsSchedule{
  // https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/schedules/CosineDecayRestarts
  required double initial_learning_rate = 1;
  required int64 first_decay_steps = 2;
  optional double t_mul = 3[default = 2.0];
  optional double m_mul = 4[default = 1.0];
  optional double alpha = 5[default = 0.0];
}

message ExponentialDecaySchedule{
  // https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/schedules/ExponentialDecay
  required double initial_learning_rate = 1;
  required int64 decay_steps = 2;
  required double decay_rate = 3;
  optional bool staircase = 4[default = false];
}

message InverseTimeDecaySchedule{
  // https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/schedules/InverseTimeDecay
  required double initial_learning_rate = 1;
  required int64 decay_steps = 2;
  required double decay_rate = 3;
  optional bool staircase = 4[default = false];
}

message PiecewiseConstantDecaySchedule{
  // https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/schedules/PiecewiseConstantDecay
  repeated int64 boundaries = 1;
  repeated double values = 2;
}

message PolynomialDecaySchedule{
  // https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/schedules/PolynomialDecay
  required double initial_learning_rate = 1;
  required int64 decay_steps = 2;
  optional double end_learning_rate = 3[default = 0.0001];
  optional double power = 4[default = 0.1];
  optional bool cycle = 5[default = false];
}
